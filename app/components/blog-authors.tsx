import {type FunctionComponent, useId} from "react";
import MePng from "../images/me.png";
import Image from "next/image";

const freeCodeCamp: FunctionComponent = () => (
	<div className="avatar">
	<svg viewBox="0 0 712 484" fill="#fff">
		<path d="M136.83 9.96c2.35 2.34 4.7 5.71 4.71 9.1.01 5.86-6.87 13.81-19.59 26.87C68.91 97 42.23 159.54 42.41 234.97c.2 83.45 28.26 150.47 82.8 202.41 11.47 10.25 16.18 18.31 16.2 25.21 0 3.38-2.33 6.9-4.67 10.29-2.2 2.35-6.89 4.71-10.27 4.71-12.62.03-30.28-14.89-53.34-43.92-44.9-55.03-65.2-115.8-66.34-198.62C5.74 152.19 31.72 96 82.57 37.99c18.3-20.73 33.56-31.5 43.97-31.52 3.38-.01 6.9 1.15 10.29 3.49Z" />
		<path d="M415.42 249.9c-19.93-5.09 61.85-101.71-83.5-217.39 0 0 19.07 60.59-77.09 195.8-96.21 135.16 42.78 215.68 42.78 215.68s-65.23-34.76 10.6-158.52c13.57-22.45 31.33-42.78 53.38-88.54 0 0 19.52 27.55 9.33 87.28-15.24 90.26 66.09 64.43 67.35 65.69 28.41 33.45-23.53 92.24-26.69 94.09-3.15 1.8 148.33-91.12 40.71-230.96-7.37 7.37-16.95 41.97-36.87 36.87Z" />
		<path d="M575.26 9.9c-2.35 2.34-4.7 5.71-4.71 9.1-.01 5.86 6.87 13.81 19.59 26.87 53.04 51.06 79.72 113.61 79.54 189.04-.2 83.45-28.26 150.47-82.8 202.41-11.47 10.25-16.18 18.31-16.2 25.21 0 3.38 2.33 6.9 4.67 10.29 2.2 2.35 6.89 4.7 10.27 4.71 12.62.03 30.28-14.89 53.34-43.92 44.9-55.03 65.2-115.8 66.34-198.62 1.05-82.86-24.93-139.05-75.78-197.06-18.3-20.73-33.56-31.5-43.97-31.52-3.38-.01-6.9 1.15-10.29 3.49Z" />
	</svg>
	</div>
);

const SoloLearn: FunctionComponent = () => {
	const id = useId();

	return (
		<div className="avatar">
		<svg viewBox="0 0 32 32">
			<g clipPath={`url(#${id})`}>
				<path
					d="M21.49 7.16c3.422 0 6.495 1.5 8.58 3.899.708.804 2.03.254 1.924-.817-.067-.697-.2-1.407-.401-2.117-1.056-3.779-4.076-6.726-7.857-7.718a11.397 11.397 0 0 0-14.446 11c0 .47.027.938.08 1.393.134 1.059 1.55 1.327 2.058.39a11.402 11.402 0 0 1 10.063-6.03Z"
					fill="#FFA310"
				/>
				<path
					d="M7.164 10.51c0-3.422 1.5-6.495 3.896-8.58.804-.708.255-2.03-.816-1.924-.71.067-1.42.2-2.13.388A11.122 11.122 0 0 0 .403 8.25C-1.593 15.868 4.112 22.71 11.41 22.71c.468 0 .937-.027 1.392-.08 1.058-.134 1.326-1.55.388-2.058a11.403 11.403 0 0 1-6.025-10.063Z"
					fill="#149EF2"
				/>
				<path
					d="M10.503 24.85c-3.419 0-6.49-1.5-8.574-3.897-.708-.803-2.03-.255-1.923.817.067.696.2 1.406.4 2.115 1.056 3.776 4.074 6.722 7.854 7.713A11.41 11.41 0 0 0 22.71 20.59c0-.468-.027-.937-.08-1.392-.134-1.058-1.55-1.326-2.057-.388-1.937 3.601-5.716 6.038-10.07 6.038Z"
					fill="#F20057"
				/>
				<path
					d="M24.85 21.497c0 3.419-1.5 6.49-3.897 8.574-.803.708-.255 2.03.817 1.923.696-.067 1.406-.2 2.115-.4 3.776-1.056 6.722-4.074 7.713-7.854A11.41 11.41 0 0 0 20.59 9.29c-.468 0-.937.027-1.392.08-1.058.134-1.326 1.55-.388 2.057 3.601 1.937 6.038 5.716 6.038 10.07Z"
					fill="#8252DD"
				/>
			</g>
			<defs>
				<clipPath id={id}>
					<path fill="#fff" d="M0 0h32v32H0z" />
				</clipPath>
			</defs>
		</svg>
		</div>
	);
};

const ProgrammingHub: FunctionComponent = () => {
	const id = useId();

	return (
		<div className="avatar">
		<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 49 45">
			<defs>
				<linearGradient id={id} x1="0%" x2="100%" y1="50%" y2="50%">
					<stop offset="0%" stopColor="#4187F7" />
					<stop offset="100%" stopColor="#2F03FF" />
				</linearGradient>
			</defs>
			<path
				fill={`url(#${id})`}
				d="M5.629 9.533H2.357V6.44H5.63v3.093zm-2.343 3.05H.023v3.093h3.271l-.008-3.093zm19.88 0H5.558v3.093h17.58l.026-3.093zm-18.362 9.27h3.272V18.76H4.804v3.093zm18.361 0V18.76H10.34v3.093h12.825zm-20.6 6.178h3.272v-3.093H2.566v3.093zM30.742.117H11.503v6.331h-3.61v3.093H23.14V6.44l16.253 10.5L23.14 28.031v-3.093H8.102v3.093h3.401V45h6.699c2.71.01 4.918-2.142 4.937-4.81v-5.76h7.628c6.319.14 12.22-3.1 15.42-8.467a16.939 16.939 0 0 0 0-17.387C42.987 3.21 37.086-.03 30.767.108l-.026.009z"
			/>
		</svg>
		</div>
	);
};

const Me: FunctionComponent = () => (
	<div className="avatar rounded-circle flex-shrink-0">
		<Image draggable={false} width={45} height={45} src={MePng} title="" alt="" />
	</div>
);


export {
	ProgrammingHub as "Programming Hub", 
	SoloLearn, 
	freeCodeCamp, 
	Me as "Tomáš Wróbel"
};
